# SPDX-FileCopyrightText: 2020 Memories Project
#
# SPDX-License-Identifier: Apache-2.0

name: Unit Test

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-10.15', 'ubuntu-16.04', 'ubuntu-18.04', 'ubuntu-20.04', 'windows-2016', 'windows-2019']
        java: [ '8', '9', '10', '11', '12', '13', '14', '15' ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          java-package: jdk
          architecture: x64

      - name: actions/test
        shell: cmd
        run: |
          set JAVA_HOME=%JAVA_HOME%
          set JAVA_HOME_JDK2=%JAVA_HOME%
          mvnw.cmd -t .mvn\toolchains.xml clean test -Pdevelopment
        if: matrix.os == 'windows-2016' || matrix.os == 'windows-2019'

      - name: actions/test
        run: |
          export JAVA_HOME=$JAVA_HOME
          export JAVA_HOME_JDK2=$JAVA_HOME
          ./mvnw -t .mvn/toolchains.xml clean package jacoco:report-aggregate -Pdevelopment -Pcoverage -Pformat
        if: matrix.os == 'macos-10.15'

      - name: actions/test
        run: |
          export JAVA_HOME=$JAVA_HOME
          export JAVA_HOME_JDK2=$JAVA_HOME
          sudo apt-get install musl-dev
          sudo ln -s /usr/lib/x86_64-linux-musl/libc.so /lib/libc.musl-x86_64.so.1
          ./mvnw -t .mvn/toolchains.xml clean test -Pdevelopment
        if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
